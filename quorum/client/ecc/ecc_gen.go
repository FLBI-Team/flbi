// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ecc

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// ECCABI is the input ABI used to generate the binding from.
const ECCABI = "[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addKeyProposals\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"unixTime\",\"type\":\"int64\"},{\"internalType\":\"uint8\",\"name\":\"keyType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"key\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"voteCount\",\"type\":\"int64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"devices\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"firmwares\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"unixTime\",\"type\":\"int64\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"mf\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"mfSig\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"key\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"keyType\",\"type\":\"uint8\"}],\"name\":\"proposeAddKey\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"key\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"keyType\",\"type\":\"uint8\"}],\"name\":\"proposeRemoveKey\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"removeKeyProposals\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"unixTime\",\"type\":\"int64\"},{\"internalType\":\"uint8\",\"name\":\"keyType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"key\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"voteCount\",\"type\":\"int64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"timestampHash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"timestamps\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"unixTime\",\"type\":\"int64\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"device\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"mfSig\",\"type\":\"bytes\"}],\"name\":\"updateFirmware\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"key\",\"type\":\"address\"}],\"name\":\"voteAddKey\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"key\",\"type\":\"address\"}],\"name\":\"voteRemoveKey\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

var ECCParsedABI, _ = abi.JSON(strings.NewReader(ECCABI))

// ECCFuncSigs maps the 4-byte function signature to its string representation.
var ECCFuncSigs = map[string]string{
	"a8b40b2d": "addKeyProposals(address)",
	"429b62e5": "admins(address)",
	"e7b4cac6": "devices(address)",
	"7d246739": "firmwares(bytes32)",
	"f25e88b0": "mf(address)",
	"15164cf9": "proposeAddKey(address,uint8)",
	"5cace31a": "proposeRemoveKey(address,uint8)",
	"e840f6a3": "removeKeyProposals(address)",
	"0e744b84": "timestampHash(bytes32)",
	"b5872958": "timestamps(bytes32)",
	"d5b98927": "updateFirmware(bytes32,bytes)",
	"465d8310": "voteAddKey(address)",
	"574e1714": "voteRemoveKey(address)",
}

// ECCBin is the compiled bytecode used for deploying new contracts.
var ECCBin = ""

// DeployECC deploys a new Ethereum contract, binding an instance of ECC to it.
func DeployECC(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *ECC, error) {
	parsed, err := abi.JSON(strings.NewReader(ECCABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(ECCBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ECC{ECCCaller: ECCCaller{contract: contract}, ECCTransactor: ECCTransactor{contract: contract}, ECCFilterer: ECCFilterer{contract: contract}}, nil
}

// ECC is an auto generated Go binding around an Ethereum contract.
type ECC struct {
	ECCCaller     // Read-only binding to the contract
	ECCTransactor // Write-only binding to the contract
	ECCFilterer   // Log filterer for contract events
}

// ECCCaller is an auto generated read-only Go binding around an Ethereum contract.
type ECCCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ECCTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ECCTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ECCFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ECCFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ECCSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ECCSession struct {
	Contract     *ECC              // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ECCCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ECCCallerSession struct {
	Contract *ECCCaller    // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// ECCTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ECCTransactorSession struct {
	Contract     *ECCTransactor    // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ECCRaw is an auto generated low-level Go binding around an Ethereum contract.
type ECCRaw struct {
	Contract *ECC // Generic contract binding to access the raw methods on
}

// ECCCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ECCCallerRaw struct {
	Contract *ECCCaller // Generic read-only contract binding to access the raw methods on
}

// ECCTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ECCTransactorRaw struct {
	Contract *ECCTransactor // Generic write-only contract binding to access the raw methods on
}

// NewECC creates a new instance of ECC, bound to a specific deployed contract.
func NewECC(address common.Address, backend bind.ContractBackend) (*ECC, error) {
	contract, err := bindECC(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ECC{ECCCaller: ECCCaller{contract: contract}, ECCTransactor: ECCTransactor{contract: contract}, ECCFilterer: ECCFilterer{contract: contract}}, nil
}

// NewECCCaller creates a new read-only instance of ECC, bound to a specific deployed contract.
func NewECCCaller(address common.Address, caller bind.ContractCaller) (*ECCCaller, error) {
	contract, err := bindECC(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ECCCaller{contract: contract}, nil
}

// NewECCTransactor creates a new write-only instance of ECC, bound to a specific deployed contract.
func NewECCTransactor(address common.Address, transactor bind.ContractTransactor) (*ECCTransactor, error) {
	contract, err := bindECC(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ECCTransactor{contract: contract}, nil
}

// NewECCFilterer creates a new log filterer instance of ECC, bound to a specific deployed contract.
func NewECCFilterer(address common.Address, filterer bind.ContractFilterer) (*ECCFilterer, error) {
	contract, err := bindECC(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ECCFilterer{contract: contract}, nil
}

// bindECC binds a generic wrapper to an already deployed contract.
func bindECC(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ECCABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ECC *ECCRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _ECC.Contract.ECCCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ECC *ECCRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ECC.Contract.ECCTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ECC *ECCRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ECC.Contract.ECCTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ECC *ECCCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _ECC.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ECC *ECCTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ECC.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ECC *ECCTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ECC.Contract.contract.Transact(opts, method, params...)
}

// AddKeyProposals is a free data retrieval call binding the contract method 0xa8b40b2d.
//
// Solidity: function addKeyProposals(address ) constant returns(int64 unixTime, uint8 keyType, address key, address proposer, int64 voteCount)
func (_ECC *ECCCaller) AddKeyProposals(opts *bind.CallOpts, arg0 common.Address) (struct {
	UnixTime  int64
	KeyType   uint8
	Key       common.Address
	Proposer  common.Address
	VoteCount int64
}, error) {
	ret := new(struct {
		UnixTime  int64
		KeyType   uint8
		Key       common.Address
		Proposer  common.Address
		VoteCount int64
	})
	out := ret
	err := _ECC.contract.Call(opts, out, "addKeyProposals", arg0)
	return *ret, err
}

// AddKeyProposals is a free data retrieval call binding the contract method 0xa8b40b2d.
//
// Solidity: function addKeyProposals(address ) constant returns(int64 unixTime, uint8 keyType, address key, address proposer, int64 voteCount)
func (_ECC *ECCSession) AddKeyProposals(arg0 common.Address) (struct {
	UnixTime  int64
	KeyType   uint8
	Key       common.Address
	Proposer  common.Address
	VoteCount int64
}, error) {
	return _ECC.Contract.AddKeyProposals(&_ECC.CallOpts, arg0)
}

// AddKeyProposals is a free data retrieval call binding the contract method 0xa8b40b2d.
//
// Solidity: function addKeyProposals(address ) constant returns(int64 unixTime, uint8 keyType, address key, address proposer, int64 voteCount)
func (_ECC *ECCCallerSession) AddKeyProposals(arg0 common.Address) (struct {
	UnixTime  int64
	KeyType   uint8
	Key       common.Address
	Proposer  common.Address
	VoteCount int64
}, error) {
	return _ECC.Contract.AddKeyProposals(&_ECC.CallOpts, arg0)
}

// Admins is a free data retrieval call binding the contract method 0x429b62e5.
//
// Solidity: function admins(address ) constant returns(bool)
func (_ECC *ECCCaller) Admins(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _ECC.contract.Call(opts, out, "admins", arg0)
	return *ret0, err
}

// Admins is a free data retrieval call binding the contract method 0x429b62e5.
//
// Solidity: function admins(address ) constant returns(bool)
func (_ECC *ECCSession) Admins(arg0 common.Address) (bool, error) {
	return _ECC.Contract.Admins(&_ECC.CallOpts, arg0)
}

// Admins is a free data retrieval call binding the contract method 0x429b62e5.
//
// Solidity: function admins(address ) constant returns(bool)
func (_ECC *ECCCallerSession) Admins(arg0 common.Address) (bool, error) {
	return _ECC.Contract.Admins(&_ECC.CallOpts, arg0)
}

// Devices is a free data retrieval call binding the contract method 0xe7b4cac6.
//
// Solidity: function devices(address ) constant returns(bool)
func (_ECC *ECCCaller) Devices(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _ECC.contract.Call(opts, out, "devices", arg0)
	return *ret0, err
}

// Devices is a free data retrieval call binding the contract method 0xe7b4cac6.
//
// Solidity: function devices(address ) constant returns(bool)
func (_ECC *ECCSession) Devices(arg0 common.Address) (bool, error) {
	return _ECC.Contract.Devices(&_ECC.CallOpts, arg0)
}

// Devices is a free data retrieval call binding the contract method 0xe7b4cac6.
//
// Solidity: function devices(address ) constant returns(bool)
func (_ECC *ECCCallerSession) Devices(arg0 common.Address) (bool, error) {
	return _ECC.Contract.Devices(&_ECC.CallOpts, arg0)
}

// Firmwares is a free data retrieval call binding the contract method 0x7d246739.
//
// Solidity: function firmwares(bytes32 ) constant returns(int64 unixTime, bytes32 hash, address admin, address mf, bytes mfSig)
func (_ECC *ECCCaller) Firmwares(opts *bind.CallOpts, arg0 [32]byte) (struct {
	UnixTime int64
	Hash     [32]byte
	Admin    common.Address
	Mf       common.Address
	MfSig    []byte
}, error) {
	ret := new(struct {
		UnixTime int64
		Hash     [32]byte
		Admin    common.Address
		Mf       common.Address
		MfSig    []byte
	})
	out := ret
	err := _ECC.contract.Call(opts, out, "firmwares", arg0)
	return *ret, err
}

// Firmwares is a free data retrieval call binding the contract method 0x7d246739.
//
// Solidity: function firmwares(bytes32 ) constant returns(int64 unixTime, bytes32 hash, address admin, address mf, bytes mfSig)
func (_ECC *ECCSession) Firmwares(arg0 [32]byte) (struct {
	UnixTime int64
	Hash     [32]byte
	Admin    common.Address
	Mf       common.Address
	MfSig    []byte
}, error) {
	return _ECC.Contract.Firmwares(&_ECC.CallOpts, arg0)
}

// Firmwares is a free data retrieval call binding the contract method 0x7d246739.
//
// Solidity: function firmwares(bytes32 ) constant returns(int64 unixTime, bytes32 hash, address admin, address mf, bytes mfSig)
func (_ECC *ECCCallerSession) Firmwares(arg0 [32]byte) (struct {
	UnixTime int64
	Hash     [32]byte
	Admin    common.Address
	Mf       common.Address
	MfSig    []byte
}, error) {
	return _ECC.Contract.Firmwares(&_ECC.CallOpts, arg0)
}

// Mf is a free data retrieval call binding the contract method 0xf25e88b0.
//
// Solidity: function mf(address ) constant returns(bool)
func (_ECC *ECCCaller) Mf(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _ECC.contract.Call(opts, out, "mf", arg0)
	return *ret0, err
}

// Mf is a free data retrieval call binding the contract method 0xf25e88b0.
//
// Solidity: function mf(address ) constant returns(bool)
func (_ECC *ECCSession) Mf(arg0 common.Address) (bool, error) {
	return _ECC.Contract.Mf(&_ECC.CallOpts, arg0)
}

// Mf is a free data retrieval call binding the contract method 0xf25e88b0.
//
// Solidity: function mf(address ) constant returns(bool)
func (_ECC *ECCCallerSession) Mf(arg0 common.Address) (bool, error) {
	return _ECC.Contract.Mf(&_ECC.CallOpts, arg0)
}

// RemoveKeyProposals is a free data retrieval call binding the contract method 0xe840f6a3.
//
// Solidity: function removeKeyProposals(address ) constant returns(int64 unixTime, uint8 keyType, address key, address proposer, int64 voteCount)
func (_ECC *ECCCaller) RemoveKeyProposals(opts *bind.CallOpts, arg0 common.Address) (struct {
	UnixTime  int64
	KeyType   uint8
	Key       common.Address
	Proposer  common.Address
	VoteCount int64
}, error) {
	ret := new(struct {
		UnixTime  int64
		KeyType   uint8
		Key       common.Address
		Proposer  common.Address
		VoteCount int64
	})
	out := ret
	err := _ECC.contract.Call(opts, out, "removeKeyProposals", arg0)
	return *ret, err
}

// RemoveKeyProposals is a free data retrieval call binding the contract method 0xe840f6a3.
//
// Solidity: function removeKeyProposals(address ) constant returns(int64 unixTime, uint8 keyType, address key, address proposer, int64 voteCount)
func (_ECC *ECCSession) RemoveKeyProposals(arg0 common.Address) (struct {
	UnixTime  int64
	KeyType   uint8
	Key       common.Address
	Proposer  common.Address
	VoteCount int64
}, error) {
	return _ECC.Contract.RemoveKeyProposals(&_ECC.CallOpts, arg0)
}

// RemoveKeyProposals is a free data retrieval call binding the contract method 0xe840f6a3.
//
// Solidity: function removeKeyProposals(address ) constant returns(int64 unixTime, uint8 keyType, address key, address proposer, int64 voteCount)
func (_ECC *ECCCallerSession) RemoveKeyProposals(arg0 common.Address) (struct {
	UnixTime  int64
	KeyType   uint8
	Key       common.Address
	Proposer  common.Address
	VoteCount int64
}, error) {
	return _ECC.Contract.RemoveKeyProposals(&_ECC.CallOpts, arg0)
}

// Timestamps is a free data retrieval call binding the contract method 0xb5872958.
//
// Solidity: function timestamps(bytes32 ) constant returns(int64 unixTime, bytes32 hash, address device)
func (_ECC *ECCCaller) Timestamps(opts *bind.CallOpts, arg0 [32]byte) (struct {
	UnixTime int64
	Hash     [32]byte
	Device   common.Address
}, error) {
	ret := new(struct {
		UnixTime int64
		Hash     [32]byte
		Device   common.Address
	})
	out := ret
	err := _ECC.contract.Call(opts, out, "timestamps", arg0)
	return *ret, err
}

// Timestamps is a free data retrieval call binding the contract method 0xb5872958.
//
// Solidity: function timestamps(bytes32 ) constant returns(int64 unixTime, bytes32 hash, address device)
func (_ECC *ECCSession) Timestamps(arg0 [32]byte) (struct {
	UnixTime int64
	Hash     [32]byte
	Device   common.Address
}, error) {
	return _ECC.Contract.Timestamps(&_ECC.CallOpts, arg0)
}

// Timestamps is a free data retrieval call binding the contract method 0xb5872958.
//
// Solidity: function timestamps(bytes32 ) constant returns(int64 unixTime, bytes32 hash, address device)
func (_ECC *ECCCallerSession) Timestamps(arg0 [32]byte) (struct {
	UnixTime int64
	Hash     [32]byte
	Device   common.Address
}, error) {
	return _ECC.Contract.Timestamps(&_ECC.CallOpts, arg0)
}

// ProposeAddKey is a paid mutator transaction binding the contract method 0x15164cf9.
//
// Solidity: function proposeAddKey(address key, uint8 keyType) returns()
func (_ECC *ECCTransactor) ProposeAddKey(opts *bind.TransactOpts, key common.Address, keyType uint8) (*types.Transaction, error) {
	return _ECC.contract.Transact(opts, "proposeAddKey", key, keyType)
}

// ProposeAddKey is a paid mutator transaction binding the contract method 0x15164cf9.
//
// Solidity: function proposeAddKey(address key, uint8 keyType) returns()
func (_ECC *ECCSession) ProposeAddKey(key common.Address, keyType uint8) (*types.Transaction, error) {
	return _ECC.Contract.ProposeAddKey(&_ECC.TransactOpts, key, keyType)
}

// ProposeAddKey is a paid mutator transaction binding the contract method 0x15164cf9.
//
// Solidity: function proposeAddKey(address key, uint8 keyType) returns()
func (_ECC *ECCTransactorSession) ProposeAddKey(key common.Address, keyType uint8) (*types.Transaction, error) {
	return _ECC.Contract.ProposeAddKey(&_ECC.TransactOpts, key, keyType)
}

// ProposeRemoveKey is a paid mutator transaction binding the contract method 0x5cace31a.
//
// Solidity: function proposeRemoveKey(address key, uint8 keyType) returns()
func (_ECC *ECCTransactor) ProposeRemoveKey(opts *bind.TransactOpts, key common.Address, keyType uint8) (*types.Transaction, error) {
	return _ECC.contract.Transact(opts, "proposeRemoveKey", key, keyType)
}

// ProposeRemoveKey is a paid mutator transaction binding the contract method 0x5cace31a.
//
// Solidity: function proposeRemoveKey(address key, uint8 keyType) returns()
func (_ECC *ECCSession) ProposeRemoveKey(key common.Address, keyType uint8) (*types.Transaction, error) {
	return _ECC.Contract.ProposeRemoveKey(&_ECC.TransactOpts, key, keyType)
}

// ProposeRemoveKey is a paid mutator transaction binding the contract method 0x5cace31a.
//
// Solidity: function proposeRemoveKey(address key, uint8 keyType) returns()
func (_ECC *ECCTransactorSession) ProposeRemoveKey(key common.Address, keyType uint8) (*types.Transaction, error) {
	return _ECC.Contract.ProposeRemoveKey(&_ECC.TransactOpts, key, keyType)
}

// TimestampHash is a paid mutator transaction binding the contract method 0x0e744b84.
//
// Solidity: function timestampHash(bytes32 hash) returns()
func (_ECC *ECCTransactor) TimestampHash(opts *bind.TransactOpts, hash [32]byte) (*types.Transaction, error) {
	return _ECC.contract.Transact(opts, "timestampHash", hash)
}

// TimestampHash is a paid mutator transaction binding the contract method 0x0e744b84.
//
// Solidity: function timestampHash(bytes32 hash) returns()
func (_ECC *ECCSession) TimestampHash(hash [32]byte) (*types.Transaction, error) {
	return _ECC.Contract.TimestampHash(&_ECC.TransactOpts, hash)
}

// TimestampHash is a paid mutator transaction binding the contract method 0x0e744b84.
//
// Solidity: function timestampHash(bytes32 hash) returns()
func (_ECC *ECCTransactorSession) TimestampHash(hash [32]byte) (*types.Transaction, error) {
	return _ECC.Contract.TimestampHash(&_ECC.TransactOpts, hash)
}

// UpdateFirmware is a paid mutator transaction binding the contract method 0xd5b98927.
//
// Solidity: function updateFirmware(bytes32 hash, bytes mfSig) returns()
func (_ECC *ECCTransactor) UpdateFirmware(opts *bind.TransactOpts, hash [32]byte, mfSig []byte) (*types.Transaction, error) {
	return _ECC.contract.Transact(opts, "updateFirmware", hash, mfSig)
}

// UpdateFirmware is a paid mutator transaction binding the contract method 0xd5b98927.
//
// Solidity: function updateFirmware(bytes32 hash, bytes mfSig) returns()
func (_ECC *ECCSession) UpdateFirmware(hash [32]byte, mfSig []byte) (*types.Transaction, error) {
	return _ECC.Contract.UpdateFirmware(&_ECC.TransactOpts, hash, mfSig)
}

// UpdateFirmware is a paid mutator transaction binding the contract method 0xd5b98927.
//
// Solidity: function updateFirmware(bytes32 hash, bytes mfSig) returns()
func (_ECC *ECCTransactorSession) UpdateFirmware(hash [32]byte, mfSig []byte) (*types.Transaction, error) {
	return _ECC.Contract.UpdateFirmware(&_ECC.TransactOpts, hash, mfSig)
}

// VoteAddKey is a paid mutator transaction binding the contract method 0x465d8310.
//
// Solidity: function voteAddKey(address key) returns()
func (_ECC *ECCTransactor) VoteAddKey(opts *bind.TransactOpts, key common.Address) (*types.Transaction, error) {
	return _ECC.contract.Transact(opts, "voteAddKey", key)
}

// VoteAddKey is a paid mutator transaction binding the contract method 0x465d8310.
//
// Solidity: function voteAddKey(address key) returns()
func (_ECC *ECCSession) VoteAddKey(key common.Address) (*types.Transaction, error) {
	return _ECC.Contract.VoteAddKey(&_ECC.TransactOpts, key)
}

// VoteAddKey is a paid mutator transaction binding the contract method 0x465d8310.
//
// Solidity: function voteAddKey(address key) returns()
func (_ECC *ECCTransactorSession) VoteAddKey(key common.Address) (*types.Transaction, error) {
	return _ECC.Contract.VoteAddKey(&_ECC.TransactOpts, key)
}

// VoteRemoveKey is a paid mutator transaction binding the contract method 0x574e1714.
//
// Solidity: function voteRemoveKey(address key) returns()
func (_ECC *ECCTransactor) VoteRemoveKey(opts *bind.TransactOpts, key common.Address) (*types.Transaction, error) {
	return _ECC.contract.Transact(opts, "voteRemoveKey", key)
}

// VoteRemoveKey is a paid mutator transaction binding the contract method 0x574e1714.
//
// Solidity: function voteRemoveKey(address key) returns()
func (_ECC *ECCSession) VoteRemoveKey(key common.Address) (*types.Transaction, error) {
	return _ECC.Contract.VoteRemoveKey(&_ECC.TransactOpts, key)
}

// VoteRemoveKey is a paid mutator transaction binding the contract method 0x574e1714.
//
// Solidity: function voteRemoveKey(address key) returns()
func (_ECC *ECCTransactorSession) VoteRemoveKey(key common.Address) (*types.Transaction, error) {
	return _ECC.Contract.VoteRemoveKey(&_ECC.TransactOpts, key)
}
